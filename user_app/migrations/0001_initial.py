# Generated by Django 4.2.2 on 2023-06-19 12:14

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import phonenumber_field.modelfields
import user_app.models
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
        ('common_app', '__first__'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('role', models.CharField(choices=[('admin', 'admin'), ('facility', 'facility'), ('provider', 'provider')], max_length=8)),
                ('first_name', models.CharField(max_length=30)),
                ('last_name', models.CharField(max_length=30)),
                ('is_staff', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('date_joined', models.DateTimeField(auto_now_add=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Manage User',
                'verbose_name_plural': 'Manage Users',
            },
        ),
        migrations.CreateModel(
            name='UserProfileModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('profile_pic', models.ImageField(default='images/default.png', upload_to='media\\images')),
                ('banner_pic', models.ImageField(null=True, upload_to='media\\images')),
                ('address', models.CharField(max_length=255)),
                ('zipcode', models.PositiveIntegerField(validators=[user_app.models.validate_zipcode])),
                ('phone_number', phonenumber_field.modelfields.PhoneNumberField(max_length=128, region=None, validators=[user_app.models.validate_ten_digits], verbose_name='phone number')),
                ('about_us', models.CharField(default='', max_length=500)),
                ('language_info', models.CharField(choices=[('english', 'English'), ('gujarati', 'Gujarati'), ('hindi', 'Hindi')], default='English', max_length=20)),
                ('bank_account', models.PositiveBigIntegerField(null=True)),
                ('instagram_info', models.URLField()),
                ('facebook_info', models.URLField()),
                ('bank_update_count', models.PositiveIntegerField(blank=True, default=0)),
                ('city', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='common_app.citymodel')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='RegistrationLinkModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reset_uuid', models.UUIDField(default=uuid.uuid4, editable=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Manage Registration Link',
                'verbose_name_plural': 'Manage Registration Links',
            },
        ),
    ]
